# Kubernetes resources for Prometheus monitoring in AgentaFlow
apiVersion: v1
kind: Namespace
metadata:
  name: agentaflow-monitoring
  labels:
    name: agentaflow-monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: agentaflow-monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'agentaflow-gpu-metrics'
        scrape_interval: 5s
        static_configs:
          - targets: ['agentaflow-service.agentaflow-system.svc.cluster.local:8080']
        metrics_path: '/metrics'
        scheme: http

      - job_name: 'agentaflow-scheduler'
        scrape_interval: 15s
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - agentaflow-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: agentaflow-scheduler
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

  alert_rules.yml: |
    groups:
      - name: agentaflow-gpu-alerts
        rules:
          - alert: GPUHighTemperature
            expr: agentaflow_gpu_temperature_celsius > 85
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "GPU {{ $labels.gpu_id }} temperature is critically high"
              description: "GPU {{ $labels.gpu_id }} on node {{ $labels.node }} has temperature {{ $value }}Â°C"

          - alert: GPUHighMemoryUsage
            expr: (agentaflow_gpu_memory_used_bytes / agentaflow_gpu_memory_total_bytes) * 100 > 90
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "GPU {{ $labels.gpu_id }} memory usage is high"
              description: "GPU {{ $labels.gpu_id }} memory usage is {{ $value }}%"

          - alert: GPULowUtilization
            expr: agentaflow_gpu_utilization_percent < 10
            for: 15m
            labels:
              severity: info
            annotations:
              summary: "GPU {{ $labels.gpu_id }} has low utilization"
              description: "GPU {{ $labels.gpu_id }} utilization is only {{ $value }}% for 15+ minutes"

          - alert: GPUUnhealthy
            expr: agentaflow_gpu_health_status == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "GPU {{ $labels.gpu_id }} is unhealthy"
              description: "GPU {{ $labels.gpu_id }} health status indicates critical issues"

          - alert: WorkloadQueueBacklog
            expr: agentaflow_workloads_pending > 5
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High number of pending workloads"
              description: "{{ $value }} workloads have been pending for more than 10 minutes"

          - alert: HighCostRate
            expr: increase(agentaflow_cost_total_dollars[1h]) > 50
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: "High GPU cost rate detected"
              description: "GPU costs increased by ${{ $value }} in the last hour"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: agentaflow-monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.40.0
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=7d'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
          ports:
            - containerPort: 9090
              name: web
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
            - name: prometheus-rules
              mountPath: /etc/prometheus/rules/
            - name: prometheus-storage
              mountPath: /prometheus/
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
            items:
              - key: prometheus.yml
                path: prometheus.yml
        - name: prometheus-rules
          configMap:
            name: prometheus-config
            items:
              - key: alert_rules.yml
                path: alert_rules.yml
        - name: prometheus-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: agentaflow-monitoring
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      name: web
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: agentaflow-monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: agentaflow-monitoring